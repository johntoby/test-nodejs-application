name: Advanced Testing Pipeline

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  NODE_ENV: test
  CI: true

jobs:
  # Job 1: Code Quality Checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    outputs:
      should-test: ${{ steps.changes.outputs.src }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '*.js'
              - 'package.json'
              - 'package-lock.json'
            tests:
              - '**/*.test.js'
      
      - name: Setup Node.js
        if: steps.changes.outputs.src == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        if: steps.changes.outputs.src == 'true'
        run: npm install
      
      - name: Basic syntax check
        if: steps.changes.outputs.src == 'true'
        run: node -c server.js

  # Job 2: Matrix Testing
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 18, 20]
        include:
          # Test latest features on Node 20 + Ubuntu
          - os: ubuntu-latest
            node: 20
            experimental: true
            coverage: true
        exclude:
          # Skip Windows + Node 16 (known compatibility issues)
          - os: windows-latest
            node: 16
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run basic test
        run: |
          echo "No tests configured yet"
          node -c server.js
          echo "✅ Syntax check passed"

  # Job 3: Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Summary job for status checks
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [quality, test, security]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.quality.result }}" == "failure" || "${{ needs.test.result }}" == "failure" || "${{ needs.security.result }}" == "failure" ]]; then
            echo "❌ Some jobs failed"
            exit 1
          else
            echo "✅ All jobs completed successfully!"
          fi